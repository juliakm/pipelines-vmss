# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

  
variables:
  system.debug: 'true'

pool:
#  vmImage: 'vs2017-win2016'
  vmImage: 'ubuntu-16.04'

steps:
# - task: Maven@1
#   displayName: 'Maven $(mavenPOMFile)'
#   inputs:
#     mavenPomFile: 'pom.xml'
#     testResultsFiles: '**/TEST*.xml'
- task: CopyFiles@2
  displayName: 'Copy File to: $(TargetFolder)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
     **/*.sh 
     **/*.war
     **/*jar-with-dependencies.jar
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true
- task: PackerBuild@1
  displayName: 'Build Custom Image'
  inputs:
    templateType: 'builtin'
    ConnectedServiceName: 'newconnectionforPacker'
    isManagedImage: false
    location: 'eastus2'
    storageAccountName: 'raiyanrg2diag978'
    azureResourceGroup: 'raiyan-rg2'
    baseImageSource: 'default'
    baseImage: 'Canonical:UbuntuServer:18.04-LTS:linux'
    packagePath: '$(Build.ArtifactStagingDirectory)'
    deployScriptPath: '$(Build.SourcesDirectory)/src/main/scripts/install.sh'

- task: AzureCLI@2
  displayName: 'Update new image to VMSS'
  inputs:
    azureSubscription: 'RMPM (afc11291-9826-46be-b852-70349146ddf8)'
    scriptType: ps
    scriptLocation: inlineScript
    inlineScript: 'az vmss update --resource-group raivmdemo-rg --name rai-packer-image-vmss --set virtualMachineProfile.storageProfile.imageReference.id=/subscriptions/afc11291-9826-46be-b852-70349146ddf8/resourceGroups/raiyan-rg2/providers/Microsoft.Compute/images/vmss-img-$(Build.BuildId)'